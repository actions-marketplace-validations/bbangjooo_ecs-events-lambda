import { SENSITIVE_STRING } from "@aws-sdk/smithy-client";
import { ECSServiceException as __BaseException } from "./ECSServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export var AgentUpdateStatus;
(function (AgentUpdateStatus) {
    AgentUpdateStatus["FAILED"] = "FAILED";
    AgentUpdateStatus["PENDING"] = "PENDING";
    AgentUpdateStatus["STAGED"] = "STAGED";
    AgentUpdateStatus["STAGING"] = "STAGING";
    AgentUpdateStatus["UPDATED"] = "UPDATED";
    AgentUpdateStatus["UPDATING"] = "UPDATING";
})(AgentUpdateStatus || (AgentUpdateStatus = {}));
export class ClientException extends __BaseException {
    constructor(opts) {
        super({
            name: "ClientException",
            $fault: "client",
            ...opts,
        });
        this.name = "ClientException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClientException.prototype);
    }
}
export var ManagedScalingStatus;
(function (ManagedScalingStatus) {
    ManagedScalingStatus["DISABLED"] = "DISABLED";
    ManagedScalingStatus["ENABLED"] = "ENABLED";
})(ManagedScalingStatus || (ManagedScalingStatus = {}));
export var ManagedTerminationProtection;
(function (ManagedTerminationProtection) {
    ManagedTerminationProtection["DISABLED"] = "DISABLED";
    ManagedTerminationProtection["ENABLED"] = "ENABLED";
})(ManagedTerminationProtection || (ManagedTerminationProtection = {}));
export var CapacityProviderStatus;
(function (CapacityProviderStatus) {
    CapacityProviderStatus["ACTIVE"] = "ACTIVE";
    CapacityProviderStatus["INACTIVE"] = "INACTIVE";
})(CapacityProviderStatus || (CapacityProviderStatus = {}));
export var CapacityProviderUpdateStatus;
(function (CapacityProviderUpdateStatus) {
    CapacityProviderUpdateStatus["DELETE_COMPLETE"] = "DELETE_COMPLETE";
    CapacityProviderUpdateStatus["DELETE_FAILED"] = "DELETE_FAILED";
    CapacityProviderUpdateStatus["DELETE_IN_PROGRESS"] = "DELETE_IN_PROGRESS";
    CapacityProviderUpdateStatus["UPDATE_COMPLETE"] = "UPDATE_COMPLETE";
    CapacityProviderUpdateStatus["UPDATE_FAILED"] = "UPDATE_FAILED";
    CapacityProviderUpdateStatus["UPDATE_IN_PROGRESS"] = "UPDATE_IN_PROGRESS";
})(CapacityProviderUpdateStatus || (CapacityProviderUpdateStatus = {}));
export class InvalidParameterException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
    }
}
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export class ServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServerException.prototype);
    }
}
export class UpdateInProgressException extends __BaseException {
    constructor(opts) {
        super({
            name: "UpdateInProgressException",
            $fault: "client",
            ...opts,
        });
        this.name = "UpdateInProgressException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UpdateInProgressException.prototype);
    }
}
export var ExecuteCommandLogging;
(function (ExecuteCommandLogging) {
    ExecuteCommandLogging["DEFAULT"] = "DEFAULT";
    ExecuteCommandLogging["NONE"] = "NONE";
    ExecuteCommandLogging["OVERRIDE"] = "OVERRIDE";
})(ExecuteCommandLogging || (ExecuteCommandLogging = {}));
export var ClusterSettingName;
(function (ClusterSettingName) {
    ClusterSettingName["CONTAINER_INSIGHTS"] = "containerInsights";
})(ClusterSettingName || (ClusterSettingName = {}));
export class ClusterNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ClusterNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterNotFoundException.prototype);
    }
}
export var DeploymentControllerType;
(function (DeploymentControllerType) {
    DeploymentControllerType["CODE_DEPLOY"] = "CODE_DEPLOY";
    DeploymentControllerType["ECS"] = "ECS";
    DeploymentControllerType["EXTERNAL"] = "EXTERNAL";
})(DeploymentControllerType || (DeploymentControllerType = {}));
export var LaunchType;
(function (LaunchType) {
    LaunchType["EC2"] = "EC2";
    LaunchType["EXTERNAL"] = "EXTERNAL";
    LaunchType["FARGATE"] = "FARGATE";
})(LaunchType || (LaunchType = {}));
export var AssignPublicIp;
(function (AssignPublicIp) {
    AssignPublicIp["DISABLED"] = "DISABLED";
    AssignPublicIp["ENABLED"] = "ENABLED";
})(AssignPublicIp || (AssignPublicIp = {}));
export var PlacementConstraintType;
(function (PlacementConstraintType) {
    PlacementConstraintType["DISTINCT_INSTANCE"] = "distinctInstance";
    PlacementConstraintType["MEMBER_OF"] = "memberOf";
})(PlacementConstraintType || (PlacementConstraintType = {}));
export var PlacementStrategyType;
(function (PlacementStrategyType) {
    PlacementStrategyType["BINPACK"] = "binpack";
    PlacementStrategyType["RANDOM"] = "random";
    PlacementStrategyType["SPREAD"] = "spread";
})(PlacementStrategyType || (PlacementStrategyType = {}));
export var PropagateTags;
(function (PropagateTags) {
    PropagateTags["NONE"] = "NONE";
    PropagateTags["SERVICE"] = "SERVICE";
    PropagateTags["TASK_DEFINITION"] = "TASK_DEFINITION";
})(PropagateTags || (PropagateTags = {}));
export var SchedulingStrategy;
(function (SchedulingStrategy) {
    SchedulingStrategy["DAEMON"] = "DAEMON";
    SchedulingStrategy["REPLICA"] = "REPLICA";
})(SchedulingStrategy || (SchedulingStrategy = {}));
export var DeploymentRolloutState;
(function (DeploymentRolloutState) {
    DeploymentRolloutState["COMPLETED"] = "COMPLETED";
    DeploymentRolloutState["FAILED"] = "FAILED";
    DeploymentRolloutState["IN_PROGRESS"] = "IN_PROGRESS";
})(DeploymentRolloutState || (DeploymentRolloutState = {}));
export var ScaleUnit;
(function (ScaleUnit) {
    ScaleUnit["PERCENT"] = "PERCENT";
})(ScaleUnit || (ScaleUnit = {}));
export var StabilityStatus;
(function (StabilityStatus) {
    StabilityStatus["STABILIZING"] = "STABILIZING";
    StabilityStatus["STEADY_STATE"] = "STEADY_STATE";
})(StabilityStatus || (StabilityStatus = {}));
export class PlatformTaskDefinitionIncompatibilityException extends __BaseException {
    constructor(opts) {
        super({
            name: "PlatformTaskDefinitionIncompatibilityException",
            $fault: "client",
            ...opts,
        });
        this.name = "PlatformTaskDefinitionIncompatibilityException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PlatformTaskDefinitionIncompatibilityException.prototype);
    }
}
export class PlatformUnknownException extends __BaseException {
    constructor(opts) {
        super({
            name: "PlatformUnknownException",
            $fault: "client",
            ...opts,
        });
        this.name = "PlatformUnknownException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PlatformUnknownException.prototype);
    }
}
export class UnsupportedFeatureException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedFeatureException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedFeatureException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedFeatureException.prototype);
    }
}
export class ServiceNotActiveException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceNotActiveException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceNotActiveException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceNotActiveException.prototype);
    }
}
export class ServiceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceNotFoundException.prototype);
    }
}
export var SettingName;
(function (SettingName) {
    SettingName["AWSVPC_TRUNKING"] = "awsvpcTrunking";
    SettingName["CONTAINER_INSIGHTS"] = "containerInsights";
    SettingName["CONTAINER_INSTANCE_LONG_ARN_FORMAT"] = "containerInstanceLongArnFormat";
    SettingName["SERVICE_LONG_ARN_FORMAT"] = "serviceLongArnFormat";
    SettingName["TASK_LONG_ARN_FORMAT"] = "taskLongArnFormat";
})(SettingName || (SettingName = {}));
export var TargetType;
(function (TargetType) {
    TargetType["CONTAINER_INSTANCE"] = "container-instance";
})(TargetType || (TargetType = {}));
export class TargetNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "TargetNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "TargetNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TargetNotFoundException.prototype);
    }
}
export class ClusterContainsContainerInstancesException extends __BaseException {
    constructor(opts) {
        super({
            name: "ClusterContainsContainerInstancesException",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterContainsContainerInstancesException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterContainsContainerInstancesException.prototype);
    }
}
export class ClusterContainsServicesException extends __BaseException {
    constructor(opts) {
        super({
            name: "ClusterContainsServicesException",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterContainsServicesException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterContainsServicesException.prototype);
    }
}
export class ClusterContainsTasksException extends __BaseException {
    constructor(opts) {
        super({
            name: "ClusterContainsTasksException",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterContainsTasksException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterContainsTasksException.prototype);
    }
}
export class TaskSetNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "TaskSetNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "TaskSetNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TaskSetNotFoundException.prototype);
    }
}
export var InstanceHealthCheckState;
(function (InstanceHealthCheckState) {
    InstanceHealthCheckState["IMPAIRED"] = "IMPAIRED";
    InstanceHealthCheckState["INITIALIZING"] = "INITIALIZING";
    InstanceHealthCheckState["INSUFFICIENT_DATA"] = "INSUFFICIENT_DATA";
    InstanceHealthCheckState["OK"] = "OK";
})(InstanceHealthCheckState || (InstanceHealthCheckState = {}));
export var InstanceHealthCheckType;
(function (InstanceHealthCheckType) {
    InstanceHealthCheckType["CONTAINER_RUNTIME"] = "CONTAINER_RUNTIME";
})(InstanceHealthCheckType || (InstanceHealthCheckType = {}));
export var Compatibility;
(function (Compatibility) {
    Compatibility["EC2"] = "EC2";
    Compatibility["EXTERNAL"] = "EXTERNAL";
    Compatibility["FARGATE"] = "FARGATE";
})(Compatibility || (Compatibility = {}));
export var ContainerCondition;
(function (ContainerCondition) {
    ContainerCondition["COMPLETE"] = "COMPLETE";
    ContainerCondition["HEALTHY"] = "HEALTHY";
    ContainerCondition["START"] = "START";
    ContainerCondition["SUCCESS"] = "SUCCESS";
})(ContainerCondition || (ContainerCondition = {}));
export var EnvironmentFileType;
(function (EnvironmentFileType) {
    EnvironmentFileType["S3"] = "s3";
})(EnvironmentFileType || (EnvironmentFileType = {}));
export var FirelensConfigurationType;
(function (FirelensConfigurationType) {
    FirelensConfigurationType["FLUENTBIT"] = "fluentbit";
    FirelensConfigurationType["FLUENTD"] = "fluentd";
})(FirelensConfigurationType || (FirelensConfigurationType = {}));
export var DeviceCgroupPermission;
(function (DeviceCgroupPermission) {
    DeviceCgroupPermission["MKNOD"] = "mknod";
    DeviceCgroupPermission["READ"] = "read";
    DeviceCgroupPermission["WRITE"] = "write";
})(DeviceCgroupPermission || (DeviceCgroupPermission = {}));
export var LogDriver;
(function (LogDriver) {
    LogDriver["AWSFIRELENS"] = "awsfirelens";
    LogDriver["AWSLOGS"] = "awslogs";
    LogDriver["FLUENTD"] = "fluentd";
    LogDriver["GELF"] = "gelf";
    LogDriver["JOURNALD"] = "journald";
    LogDriver["JSON_FILE"] = "json-file";
    LogDriver["SPLUNK"] = "splunk";
    LogDriver["SYSLOG"] = "syslog";
})(LogDriver || (LogDriver = {}));
export var TransportProtocol;
(function (TransportProtocol) {
    TransportProtocol["TCP"] = "tcp";
    TransportProtocol["UDP"] = "udp";
})(TransportProtocol || (TransportProtocol = {}));
export var ResourceType;
(function (ResourceType) {
    ResourceType["GPU"] = "GPU";
    ResourceType["INFERENCE_ACCELERATOR"] = "InferenceAccelerator";
})(ResourceType || (ResourceType = {}));
export var UlimitName;
(function (UlimitName) {
    UlimitName["CORE"] = "core";
    UlimitName["CPU"] = "cpu";
    UlimitName["DATA"] = "data";
    UlimitName["FSIZE"] = "fsize";
    UlimitName["LOCKS"] = "locks";
    UlimitName["MEMLOCK"] = "memlock";
    UlimitName["MSGQUEUE"] = "msgqueue";
    UlimitName["NICE"] = "nice";
    UlimitName["NOFILE"] = "nofile";
    UlimitName["NPROC"] = "nproc";
    UlimitName["RSS"] = "rss";
    UlimitName["RTPRIO"] = "rtprio";
    UlimitName["RTTIME"] = "rttime";
    UlimitName["SIGPENDING"] = "sigpending";
    UlimitName["STACK"] = "stack";
})(UlimitName || (UlimitName = {}));
export var IpcMode;
(function (IpcMode) {
    IpcMode["HOST"] = "host";
    IpcMode["NONE"] = "none";
    IpcMode["TASK"] = "task";
})(IpcMode || (IpcMode = {}));
export var NetworkMode;
(function (NetworkMode) {
    NetworkMode["AWSVPC"] = "awsvpc";
    NetworkMode["BRIDGE"] = "bridge";
    NetworkMode["HOST"] = "host";
    NetworkMode["NONE"] = "none";
})(NetworkMode || (NetworkMode = {}));
export var PidMode;
(function (PidMode) {
    PidMode["HOST"] = "host";
    PidMode["TASK"] = "task";
})(PidMode || (PidMode = {}));
export var TaskDefinitionPlacementConstraintType;
(function (TaskDefinitionPlacementConstraintType) {
    TaskDefinitionPlacementConstraintType["MEMBER_OF"] = "memberOf";
})(TaskDefinitionPlacementConstraintType || (TaskDefinitionPlacementConstraintType = {}));
export var ProxyConfigurationType;
(function (ProxyConfigurationType) {
    ProxyConfigurationType["APPMESH"] = "APPMESH";
})(ProxyConfigurationType || (ProxyConfigurationType = {}));
export var CPUArchitecture;
(function (CPUArchitecture) {
    CPUArchitecture["ARM64"] = "ARM64";
    CPUArchitecture["X86_64"] = "X86_64";
})(CPUArchitecture || (CPUArchitecture = {}));
export var OSFamily;
(function (OSFamily) {
    OSFamily["LINUX"] = "LINUX";
    OSFamily["WINDOWS_SERVER_2004_CORE"] = "WINDOWS_SERVER_2004_CORE";
    OSFamily["WINDOWS_SERVER_2016_FULL"] = "WINDOWS_SERVER_2016_FULL";
    OSFamily["WINDOWS_SERVER_2019_CORE"] = "WINDOWS_SERVER_2019_CORE";
    OSFamily["WINDOWS_SERVER_2019_FULL"] = "WINDOWS_SERVER_2019_FULL";
    OSFamily["WINDOWS_SERVER_2022_CORE"] = "WINDOWS_SERVER_2022_CORE";
    OSFamily["WINDOWS_SERVER_2022_FULL"] = "WINDOWS_SERVER_2022_FULL";
    OSFamily["WINDOWS_SERVER_20H2_CORE"] = "WINDOWS_SERVER_20H2_CORE";
})(OSFamily || (OSFamily = {}));
export var TaskDefinitionStatus;
(function (TaskDefinitionStatus) {
    TaskDefinitionStatus["ACTIVE"] = "ACTIVE";
    TaskDefinitionStatus["INACTIVE"] = "INACTIVE";
})(TaskDefinitionStatus || (TaskDefinitionStatus = {}));
export var Scope;
(function (Scope) {
    Scope["SHARED"] = "shared";
    Scope["TASK"] = "task";
})(Scope || (Scope = {}));
export var EFSAuthorizationConfigIAM;
(function (EFSAuthorizationConfigIAM) {
    EFSAuthorizationConfigIAM["DISABLED"] = "DISABLED";
    EFSAuthorizationConfigIAM["ENABLED"] = "ENABLED";
})(EFSAuthorizationConfigIAM || (EFSAuthorizationConfigIAM = {}));
export var EFSTransitEncryption;
(function (EFSTransitEncryption) {
    EFSTransitEncryption["DISABLED"] = "DISABLED";
    EFSTransitEncryption["ENABLED"] = "ENABLED";
})(EFSTransitEncryption || (EFSTransitEncryption = {}));
export var CapacityProviderField;
(function (CapacityProviderField) {
    CapacityProviderField["TAGS"] = "TAGS";
})(CapacityProviderField || (CapacityProviderField = {}));
export var ClusterField;
(function (ClusterField) {
    ClusterField["ATTACHMENTS"] = "ATTACHMENTS";
    ClusterField["CONFIGURATIONS"] = "CONFIGURATIONS";
    ClusterField["SETTINGS"] = "SETTINGS";
    ClusterField["STATISTICS"] = "STATISTICS";
    ClusterField["TAGS"] = "TAGS";
})(ClusterField || (ClusterField = {}));
export var ContainerInstanceField;
(function (ContainerInstanceField) {
    ContainerInstanceField["CONTAINER_INSTANCE_HEALTH"] = "CONTAINER_INSTANCE_HEALTH";
    ContainerInstanceField["TAGS"] = "TAGS";
})(ContainerInstanceField || (ContainerInstanceField = {}));
export var ServiceField;
(function (ServiceField) {
    ServiceField["TAGS"] = "TAGS";
})(ServiceField || (ServiceField = {}));
export var TaskDefinitionField;
(function (TaskDefinitionField) {
    TaskDefinitionField["TAGS"] = "TAGS";
})(TaskDefinitionField || (TaskDefinitionField = {}));
export var TaskField;
(function (TaskField) {
    TaskField["TAGS"] = "TAGS";
})(TaskField || (TaskField = {}));
export var Connectivity;
(function (Connectivity) {
    Connectivity["CONNECTED"] = "CONNECTED";
    Connectivity["DISCONNECTED"] = "DISCONNECTED";
})(Connectivity || (Connectivity = {}));
export var HealthStatus;
(function (HealthStatus) {
    HealthStatus["HEALTHY"] = "HEALTHY";
    HealthStatus["UNHEALTHY"] = "UNHEALTHY";
    HealthStatus["UNKNOWN"] = "UNKNOWN";
})(HealthStatus || (HealthStatus = {}));
export var ManagedAgentName;
(function (ManagedAgentName) {
    ManagedAgentName["ExecuteCommandAgent"] = "ExecuteCommandAgent";
})(ManagedAgentName || (ManagedAgentName = {}));
export var TaskStopCode;
(function (TaskStopCode) {
    TaskStopCode["ESSENTIAL_CONTAINER_EXITED"] = "EssentialContainerExited";
    TaskStopCode["TASK_FAILED_TO_START"] = "TaskFailedToStart";
    TaskStopCode["USER_INITIATED"] = "UserInitiated";
})(TaskStopCode || (TaskStopCode = {}));
export var TaskSetField;
(function (TaskSetField) {
    TaskSetField["TAGS"] = "TAGS";
})(TaskSetField || (TaskSetField = {}));
export class TargetNotConnectedException extends __BaseException {
    constructor(opts) {
        super({
            name: "TargetNotConnectedException",
            $fault: "client",
            ...opts,
        });
        this.name = "TargetNotConnectedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TargetNotConnectedException.prototype);
    }
}
export var ContainerInstanceStatus;
(function (ContainerInstanceStatus) {
    ContainerInstanceStatus["ACTIVE"] = "ACTIVE";
    ContainerInstanceStatus["DEREGISTERING"] = "DEREGISTERING";
    ContainerInstanceStatus["DRAINING"] = "DRAINING";
    ContainerInstanceStatus["REGISTERING"] = "REGISTERING";
    ContainerInstanceStatus["REGISTRATION_FAILED"] = "REGISTRATION_FAILED";
})(ContainerInstanceStatus || (ContainerInstanceStatus = {}));
export var TaskDefinitionFamilyStatus;
(function (TaskDefinitionFamilyStatus) {
    TaskDefinitionFamilyStatus["ACTIVE"] = "ACTIVE";
    TaskDefinitionFamilyStatus["ALL"] = "ALL";
    TaskDefinitionFamilyStatus["INACTIVE"] = "INACTIVE";
})(TaskDefinitionFamilyStatus || (TaskDefinitionFamilyStatus = {}));
export var SortOrder;
(function (SortOrder) {
    SortOrder["ASC"] = "ASC";
    SortOrder["DESC"] = "DESC";
})(SortOrder || (SortOrder = {}));
export var DesiredStatus;
(function (DesiredStatus) {
    DesiredStatus["PENDING"] = "PENDING";
    DesiredStatus["RUNNING"] = "RUNNING";
    DesiredStatus["STOPPED"] = "STOPPED";
})(DesiredStatus || (DesiredStatus = {}));
export class AttributeLimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "AttributeLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "AttributeLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AttributeLimitExceededException.prototype);
    }
}
export class ResourceInUseException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceInUseException.prototype);
    }
}
export var PlatformDeviceType;
(function (PlatformDeviceType) {
    PlatformDeviceType["GPU"] = "GPU";
})(PlatformDeviceType || (PlatformDeviceType = {}));
export class BlockedException extends __BaseException {
    constructor(opts) {
        super({
            name: "BlockedException",
            $fault: "client",
            ...opts,
        });
        this.name = "BlockedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, BlockedException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export class MissingVersionException extends __BaseException {
    constructor(opts) {
        super({
            name: "MissingVersionException",
            $fault: "client",
            ...opts,
        });
        this.name = "MissingVersionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MissingVersionException.prototype);
    }
}
export class NoUpdateAvailableException extends __BaseException {
    constructor(opts) {
        super({
            name: "NoUpdateAvailableException",
            $fault: "client",
            ...opts,
        });
        this.name = "NoUpdateAvailableException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NoUpdateAvailableException.prototype);
    }
}
export const ManagedScalingFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AutoScalingGroupProviderFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCapacityProviderRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CapacityProviderFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCapacityProviderResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExecuteCommandLogConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExecuteCommandConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ClusterConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CapacityProviderStrategyItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ClusterSettingFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateClusterRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const KeyValuePairFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AttachmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ClusterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateClusterResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeploymentCircuitBreakerFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeploymentConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeploymentControllerFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LoadBalancerFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AwsVpcConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PlacementConstraintFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PlacementStrategyFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ServiceRegistryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateServiceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeploymentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ServiceEventFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ScaleFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TaskSetFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ServiceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateServiceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTaskSetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTaskSetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteAccountSettingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SettingFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteAccountSettingResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AttributeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteAttributesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteAttributesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCapacityProviderRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCapacityProviderResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteClusterRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteClusterResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteServiceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteServiceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteTaskSetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteTaskSetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeregisterContainerInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InstanceHealthCheckResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ContainerInstanceHealthStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResourceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VersionInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ContainerInstanceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeregisterContainerInstanceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeregisterTaskDefinitionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ContainerDependencyFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EnvironmentFileFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const HostEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FirelensConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const HealthCheckFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const KernelCapabilitiesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeviceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TmpfsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LinuxParametersFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SecretFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LogConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MountPointFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PortMappingFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RepositoryCredentialsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResourceRequirementFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SystemControlFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UlimitFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VolumeFromFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ContainerDefinitionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EphemeralStorageFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InferenceAcceleratorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TaskDefinitionPlacementConstraintFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProxyConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RuntimePlatformFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DockerVolumeConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EFSAuthorizationConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EFSVolumeConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FSxWindowsFileServerAuthorizationConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FSxWindowsFileServerVolumeConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const HostVolumePropertiesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VolumeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TaskDefinitionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeregisterTaskDefinitionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeCapacityProvidersRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FailureFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeCapacityProvidersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeClustersRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeClustersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeContainerInstancesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeContainerInstancesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeServicesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeServicesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeTaskDefinitionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeTaskDefinitionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeTasksRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ManagedAgentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkBindingFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInterfaceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ContainerFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ContainerOverrideFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InferenceAcceleratorOverrideFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TaskOverrideFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TaskFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeTasksResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeTaskSetsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DescribeTaskSetsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DiscoverPollEndpointRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DiscoverPollEndpointResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExecuteCommandRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SessionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tokenValue && { tokenValue: SENSITIVE_STRING }),
});
export const ExecuteCommandResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.session && { session: SessionFilterSensitiveLog(obj.session) }),
});
export const ListAccountSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListAccountSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListAttributesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListAttributesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListClustersRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListClustersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListContainerInstancesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListContainerInstancesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListServicesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListServicesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTagsForResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTagsForResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTaskDefinitionFamiliesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTaskDefinitionFamiliesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTaskDefinitionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTaskDefinitionsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTasksRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ListTasksResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutAccountSettingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutAccountSettingResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutAccountSettingDefaultRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutAccountSettingDefaultResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutAttributesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutAttributesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutClusterCapacityProvidersRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutClusterCapacityProvidersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PlatformDeviceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterContainerInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterContainerInstanceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterTaskDefinitionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RegisterTaskDefinitionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RunTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RunTaskResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartTaskResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StopTaskResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AttachmentStateChangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SubmitAttachmentStateChangesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SubmitAttachmentStateChangesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SubmitContainerStateChangeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SubmitContainerStateChangeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ContainerStateChangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ManagedAgentStateChangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SubmitTaskStateChangeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SubmitTaskStateChangeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UntagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UntagResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AutoScalingGroupProviderUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateCapacityProviderRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateCapacityProviderResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateClusterRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateClusterResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateClusterSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateClusterSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateContainerAgentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateContainerAgentResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateContainerInstancesStateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateContainerInstancesStateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateServiceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateServiceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateServicePrimaryTaskSetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateServicePrimaryTaskSetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateTaskSetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateTaskSetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
